/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|TOP_SCOMP|SCOMP:inst|STATE")
{
	VALUES = "STATE.RESET_PC", "STATE.FETCH", "STATE.DECODE", "STATE.EX_LOAD", "STATE.EX_STORE", "STATE.EX_STORE2", "STATE.EX_ADD", "STATE.EX_SUB", "STATE.EX_JUMP", "STATE.EX_JNEG", "STATE.EX_JPOS", "STATE.EX_JZERO", "STATE.EX_AND", "STATE.EX_OR", "STATE.EX_XOR", "STATE.EX_SHIFT", "STATE.EX_ADDI", "STATE.EX_CALL", "STATE.EX_RETURN";
}

SIGNAL("MAR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MAR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MDR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("MAR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 297.748;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 66.666;
			LEVEL 0 FOR 33.334;
		}
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 333.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 33.334;
		LEVEL 1 FOR 2.252;
	}
}

TRANSITION_LIST("MAR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 198.662;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 201.338;
	}
}

TRANSITION_LIST("MAR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 597.206;
		LEVEL 1 FOR 0.753;
		LEVEL 0 FOR 402.041;
	}
}

TRANSITION_LIST("MAR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 397.721;
		LEVEL 1 FOR 0.77;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 132.564;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.77;
		LEVEL 0 FOR 299.23;
		LEVEL 1 FOR 0.77;
		LEVEL 0 FOR 1.509;
	}
}

TRANSITION_LIST("MAR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 197.5;
		LEVEL 1 FOR 0.267;
		LEVEL 0 FOR 99.733;
		LEVEL 1 FOR 0.267;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 33.067;
		LEVEL 0 FOR 0.267;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 33.067;
		LEVEL 1 FOR 0.267;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 33.067;
		LEVEL 0 FOR 66.933;
		LEVEL 1 FOR 33.067;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.267;
		LEVEL 0 FOR 99.733;
		LEVEL 1 FOR 0.267;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 33.067;
		LEVEL 0 FOR 0.267;
		LEVEL 1 FOR 2.233;
	}
}

TRANSITION_LIST("MDR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 416.173;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 517.161;
	}
}

TRANSITION_LIST("MDR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.144;
		LEVEL 1 FOR 198.651;
		LEVEL 0 FOR 366.666;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 33.334;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 183.205;
	}
}

TRANSITION_LIST("MDR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 382.843;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 17.157;
	}
}

TRANSITION_LIST("MDR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 516.143;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 33.334;
		LEVEL 0 FOR 283.857;
	}
}

TRANSITION_LIST("MDR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 483.146;
		LEVEL 1 FOR 33.334;
		LEVEL 0 FOR 483.52;
	}
}

TRANSITION_LIST("MDR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 216.449;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 133.334;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 66.666;
			LEVEL 1 FOR 33.334;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 16.885;
	}
}

TRANSITION_LIST("MDR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 516.738;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 416.596;
	}
}

TRANSITION_LIST("MDR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 416.995;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 33.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 416.339;
	}
}

TRANSITION_LIST("MDR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.436;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 33.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 433.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 16.898;
	}
}

TRANSITION_LIST("MDR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.664;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 533.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 16.67;
	}
}

TRANSITION_LIST("MDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 216.547;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 183.453;
	}
}

TRANSITION_LIST("MDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.155;
		LEVEL 1 FOR 398.651;
		LEVEL 0 FOR 66.666;
		LEVEL 1 FOR 33.334;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 33.334;
		LEVEL 1 FOR 283.194;
	}
}

TRANSITION_LIST("MDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.803;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 533.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 16.531;
	}
}

TRANSITION_LIST("MDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.802;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 33.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 433.334;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 16.532;
	}
}

TRANSITION_LIST("MDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.316;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 33.334;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 66.666;
		LEVEL 0 FOR 17.018;
	}
}

TRANSITION_LIST("MDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.785;
		LEVEL 1 FOR 166.666;
		LEVEL 0 FOR 433.334;
		LEVEL 1 FOR 83.215;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 980.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MAR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 19;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
