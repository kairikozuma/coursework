|sm_tester
CLOCK <= SIM:inst2.CLOCK
Z <= sm_schematic:inst3.Z
RESETN <= SIM:inst2.RESET_N
X[0] <= SIM:inst2.X0
X[1] <= SIM:inst2.X1
Q[0] <= sm_schematic:inst3.Q[0]
Q[1] <= sm_schematic:inst3.Q[1]
CLOCK_50 => clkgen:inst6.inclk0
KEY[0] => SIM:inst2.RESET_SIM_N
KEY[1] => SIM:inst2.RUN_SIM_N
VGA_HS <= SIM:inst2.H_SYNC
VGA_VS <= SIM:inst2.V_SYNC
VGA_BLANK <= SIM:inst2.VIDEO_BLANK
VGA_CLK <= SIM:inst2.VIDEO_CLOCK
LEDG[0] <= SIM:inst2.PASSED
LEDR[0] <= SIM:inst2.FAILED
VGA_B[0] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= B.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= G.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[0] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= R.DB_MAX_OUTPUT_PORT_TYPE


|sm_tester|SIM:inst2
Z => process_1.IN0
Z => Selector48.IN2
Q1 => Equal1.IN0
Q1 => process_1.IN1
Q1 => Add13.IN2
Q0 => Selector36.IN5
Q0 => Equal1.IN1
CLK_25MHZ => altsyncram:vbuffer.clock0
CLK_25MHZ => CLOCK_SIM.CLK
CLK_25MHZ => clk_sim_cnt[0].CLK
CLK_25MHZ => clk_sim_cnt[1].CLK
CLK_25MHZ => clk_sim_cnt[2].CLK
CLK_25MHZ => clk_sim_cnt[3].CLK
CLK_25MHZ => clk_sim_cnt[4].CLK
CLK_25MHZ => clk_sim_cnt[5].CLK
CLK_25MHZ => clk_sim_cnt[6].CLK
CLK_25MHZ => clk_sim_cnt[7].CLK
CLK_25MHZ => clk_sim_cnt[8].CLK
CLK_25MHZ => clk_sim_cnt[9].CLK
CLK_25MHZ => clk_sim_cnt[10].CLK
CLK_25MHZ => clk_sim_cnt[11].CLK
CLK_25MHZ => altsyncram:charrom.clock0
CLK_25MHZ => altsyncram:vectors.clock0
CLK_25MHZ => VGA_SYNC:vga.clock_25Mhz
CLK_25MHZ => altsyncram:vbuffer.clock1
CLK_25MHZ => altsyncram:charrom.clock1
CLK_25MHZ => altsyncram:vectors.clock1
CLK_25MHZ => VB_WE.CLK
CLK_25MHZ => VB_DATA[0].CLK
CLK_25MHZ => VB_DATA[1].CLK
CLK_25MHZ => VB_DATA[2].CLK
CLK_25MHZ => VB_DATA[3].CLK
CLK_25MHZ => VB_DATA[4].CLK
CLK_25MHZ => VB_DATA[5].CLK
CLK_25MHZ => VB_ADDR[0].CLK
CLK_25MHZ => VB_ADDR[1].CLK
CLK_25MHZ => VB_ADDR[2].CLK
CLK_25MHZ => VB_ADDR[3].CLK
CLK_25MHZ => VB_ADDR[4].CLK
CLK_25MHZ => VB_ADDR[5].CLK
CLK_25MHZ => VB_ADDR[6].CLK
CLK_25MHZ => VB_ADDR[7].CLK
CLK_25MHZ => VB_ADDR[8].CLK
CLK_25MHZ => VB_ADDR[9].CLK
CLK_25MHZ => VB_ADDR[10].CLK
CLK_25MHZ => bindex[0].CLK
CLK_25MHZ => bindex[1].CLK
CLK_25MHZ => bindex[2].CLK
CLK_25MHZ => CLR_WRITE.CLK
CLK_25MHZ => VB_STATE~5.DATAIN
RESET_SIM_N => AZACT[0].PRESET
RESET_SIM_N => AZACT[1].PRESET
RESET_SIM_N => AZACT[2].PRESET
RESET_SIM_N => AZACT[3].ACLR
RESET_SIM_N => AZACT[4].ACLR
RESET_SIM_N => AZACT[5].PRESET
RESET_SIM_N => AZACT[6].PRESET
RESET_SIM_N => AZACT[7].PRESET
RESET_SIM_N => AZACT[8].PRESET
RESET_SIM_N => AZACT[9].ACLR
RESET_SIM_N => AZACT[10].ACLR
RESET_SIM_N => AZEXP[0].PRESET
RESET_SIM_N => AZEXP[1].PRESET
RESET_SIM_N => AZEXP[2].PRESET
RESET_SIM_N => AZEXP[3].PRESET
RESET_SIM_N => AZEXP[4].PRESET
RESET_SIM_N => AZEXP[5].PRESET
RESET_SIM_N => AZEXP[6].ACLR
RESET_SIM_N => AZEXP[7].PRESET
RESET_SIM_N => AZEXP[8].PRESET
RESET_SIM_N => AZEXP[9].ACLR
RESET_SIM_N => AZEXP[10].ACLR
RESET_SIM_N => AACT[0].PRESET
RESET_SIM_N => AACT[1].PRESET
RESET_SIM_N => AACT[2].PRESET
RESET_SIM_N => AACT[3].PRESET
RESET_SIM_N => AACT[4].ACLR
RESET_SIM_N => AACT[5].PRESET
RESET_SIM_N => AACT[6].PRESET
RESET_SIM_N => AACT[7].ACLR
RESET_SIM_N => AACT[8].PRESET
RESET_SIM_N => AACT[9].ACLR
RESET_SIM_N => AACT[10].ACLR
RESET_SIM_N => AEXP[0].PRESET
RESET_SIM_N => AEXP[1].PRESET
RESET_SIM_N => AEXP[2].PRESET
RESET_SIM_N => AEXP[3].ACLR
RESET_SIM_N => AEXP[4].ACLR
RESET_SIM_N => AEXP[5].ACLR
RESET_SIM_N => AEXP[6].PRESET
RESET_SIM_N => AEXP[7].ACLR
RESET_SIM_N => AEXP[8].PRESET
RESET_SIM_N => AEXP[9].ACLR
RESET_SIM_N => AEXP[10].ACLR
RESET_SIM_N => AX0[0].PRESET
RESET_SIM_N => AX0[1].PRESET
RESET_SIM_N => AX0[2].PRESET
RESET_SIM_N => AX0[3].ACLR
RESET_SIM_N => AX0[4].PRESET
RESET_SIM_N => AX0[5].PRESET
RESET_SIM_N => AX0[6].PRESET
RESET_SIM_N => AX0[7].PRESET
RESET_SIM_N => AX0[8].ACLR
RESET_SIM_N => AX0[9].ACLR
RESET_SIM_N => AX0[10].ACLR
RESET_SIM_N => AX1[0].PRESET
RESET_SIM_N => AX1[1].PRESET
RESET_SIM_N => AX1[2].PRESET
RESET_SIM_N => AX1[3].PRESET
RESET_SIM_N => AX1[4].ACLR
RESET_SIM_N => AX1[5].ACLR
RESET_SIM_N => AX1[6].PRESET
RESET_SIM_N => AX1[7].PRESET
RESET_SIM_N => AX1[8].ACLR
RESET_SIM_N => AX1[9].ACLR
RESET_SIM_N => AX1[10].ACLR
RESET_SIM_N => ABUFFER[6][0].ACLR
RESET_SIM_N => ABUFFER[6][1].ACLR
RESET_SIM_N => ABUFFER[6][2].ACLR
RESET_SIM_N => ABUFFER[6][3].ACLR
RESET_SIM_N => ABUFFER[6][4].ACLR
RESET_SIM_N => ABUFFER[6][5].ACLR
RESET_SIM_N => ABUFFER[6][6].ACLR
RESET_SIM_N => ABUFFER[6][7].ACLR
RESET_SIM_N => ABUFFER[6][8].ACLR
RESET_SIM_N => ABUFFER[6][9].ACLR
RESET_SIM_N => ABUFFER[6][10].ACLR
RESET_SIM_N => ABUFFER[5][0].ACLR
RESET_SIM_N => ABUFFER[5][1].ACLR
RESET_SIM_N => ABUFFER[5][2].ACLR
RESET_SIM_N => ABUFFER[5][3].ACLR
RESET_SIM_N => ABUFFER[5][4].ACLR
RESET_SIM_N => ABUFFER[5][5].ACLR
RESET_SIM_N => ABUFFER[5][6].ACLR
RESET_SIM_N => ABUFFER[5][7].ACLR
RESET_SIM_N => ABUFFER[5][8].ACLR
RESET_SIM_N => ABUFFER[5][9].ACLR
RESET_SIM_N => ABUFFER[5][10].ACLR
RESET_SIM_N => ABUFFER[4][0].ACLR
RESET_SIM_N => ABUFFER[4][1].ACLR
RESET_SIM_N => ABUFFER[4][2].ACLR
RESET_SIM_N => ABUFFER[4][3].ACLR
RESET_SIM_N => ABUFFER[4][4].ACLR
RESET_SIM_N => ABUFFER[4][5].ACLR
RESET_SIM_N => ABUFFER[4][6].ACLR
RESET_SIM_N => ABUFFER[4][7].ACLR
RESET_SIM_N => ABUFFER[4][8].ACLR
RESET_SIM_N => ABUFFER[4][9].ACLR
RESET_SIM_N => ABUFFER[4][10].ACLR
RESET_SIM_N => ABUFFER[3][0].ACLR
RESET_SIM_N => ABUFFER[3][1].ACLR
RESET_SIM_N => ABUFFER[3][2].ACLR
RESET_SIM_N => ABUFFER[3][3].ACLR
RESET_SIM_N => ABUFFER[3][4].ACLR
RESET_SIM_N => ABUFFER[3][5].ACLR
RESET_SIM_N => ABUFFER[3][6].ACLR
RESET_SIM_N => ABUFFER[3][7].ACLR
RESET_SIM_N => ABUFFER[3][8].ACLR
RESET_SIM_N => ABUFFER[3][9].ACLR
RESET_SIM_N => ABUFFER[3][10].ACLR
RESET_SIM_N => ABUFFER[2][0].ACLR
RESET_SIM_N => ABUFFER[2][1].ACLR
RESET_SIM_N => ABUFFER[2][2].ACLR
RESET_SIM_N => ABUFFER[2][3].ACLR
RESET_SIM_N => ABUFFER[2][4].ACLR
RESET_SIM_N => ABUFFER[2][5].ACLR
RESET_SIM_N => ABUFFER[2][6].ACLR
RESET_SIM_N => ABUFFER[2][7].ACLR
RESET_SIM_N => ABUFFER[2][8].ACLR
RESET_SIM_N => ABUFFER[2][9].ACLR
RESET_SIM_N => ABUFFER[2][10].ACLR
RESET_SIM_N => ABUFFER[1][0].ACLR
RESET_SIM_N => ABUFFER[1][1].ACLR
RESET_SIM_N => ABUFFER[1][2].ACLR
RESET_SIM_N => ABUFFER[1][3].ACLR
RESET_SIM_N => ABUFFER[1][4].ACLR
RESET_SIM_N => ABUFFER[1][5].ACLR
RESET_SIM_N => ABUFFER[1][6].ACLR
RESET_SIM_N => ABUFFER[1][7].ACLR
RESET_SIM_N => ABUFFER[1][8].ACLR
RESET_SIM_N => ABUFFER[1][9].ACLR
RESET_SIM_N => ABUFFER[1][10].ACLR
RESET_SIM_N => ABUFFER[0][0].ACLR
RESET_SIM_N => ABUFFER[0][1].ACLR
RESET_SIM_N => ABUFFER[0][2].ACLR
RESET_SIM_N => ABUFFER[0][3].ACLR
RESET_SIM_N => ABUFFER[0][4].ACLR
RESET_SIM_N => ABUFFER[0][5].ACLR
RESET_SIM_N => ABUFFER[0][6].ACLR
RESET_SIM_N => ABUFFER[0][7].ACLR
RESET_SIM_N => ABUFFER[0][8].ACLR
RESET_SIM_N => ABUFFER[0][9].ACLR
RESET_SIM_N => ABUFFER[0][10].ACLR
RESET_SIM_N => DBUFFER[6][0].ACLR
RESET_SIM_N => DBUFFER[6][1].ACLR
RESET_SIM_N => DBUFFER[6][2].ACLR
RESET_SIM_N => DBUFFER[6][3].ACLR
RESET_SIM_N => DBUFFER[6][4].ACLR
RESET_SIM_N => DBUFFER[6][5].ACLR
RESET_SIM_N => DBUFFER[5][0].ACLR
RESET_SIM_N => DBUFFER[5][1].ACLR
RESET_SIM_N => DBUFFER[5][2].ACLR
RESET_SIM_N => DBUFFER[5][3].ACLR
RESET_SIM_N => DBUFFER[5][4].ACLR
RESET_SIM_N => DBUFFER[5][5].ACLR
RESET_SIM_N => DBUFFER[4][0].ACLR
RESET_SIM_N => DBUFFER[4][1].ACLR
RESET_SIM_N => DBUFFER[4][2].ACLR
RESET_SIM_N => DBUFFER[4][3].ACLR
RESET_SIM_N => DBUFFER[4][4].ACLR
RESET_SIM_N => DBUFFER[4][5].ACLR
RESET_SIM_N => DBUFFER[3][0].ACLR
RESET_SIM_N => DBUFFER[3][1].ACLR
RESET_SIM_N => DBUFFER[3][2].ACLR
RESET_SIM_N => DBUFFER[3][3].ACLR
RESET_SIM_N => DBUFFER[3][4].ACLR
RESET_SIM_N => DBUFFER[3][5].ACLR
RESET_SIM_N => DBUFFER[2][0].ACLR
RESET_SIM_N => DBUFFER[2][1].ACLR
RESET_SIM_N => DBUFFER[2][2].ACLR
RESET_SIM_N => DBUFFER[2][3].ACLR
RESET_SIM_N => DBUFFER[2][4].ACLR
RESET_SIM_N => DBUFFER[2][5].ACLR
RESET_SIM_N => DBUFFER[1][0].ACLR
RESET_SIM_N => DBUFFER[1][1].ACLR
RESET_SIM_N => DBUFFER[1][2].ACLR
RESET_SIM_N => DBUFFER[1][3].ACLR
RESET_SIM_N => DBUFFER[1][4].ACLR
RESET_SIM_N => DBUFFER[1][5].ACLR
RESET_SIM_N => DBUFFER[0][0].ACLR
RESET_SIM_N => DBUFFER[0][1].ACLR
RESET_SIM_N => DBUFFER[0][2].ACLR
RESET_SIM_N => DBUFFER[0][3].ACLR
RESET_SIM_N => DBUFFER[0][4].ACLR
RESET_SIM_N => DBUFFER[0][5].ACLR
RESET_SIM_N => RGB_BACK[0].PRESET
RESET_SIM_N => RGB_BACK[1].ACLR
RESET_SIM_N => RGB_BACK[2].ACLR
RESET_SIM_N => RESET_N~reg0.ACLR
RESET_SIM_N => PASSED~reg0.ACLR
RESET_SIM_N => TEST_FAILED.ACLR
RESET_SIM_N => TEST_ADDRESS[0].ACLR
RESET_SIM_N => TEST_ADDRESS[1].ACLR
RESET_SIM_N => TEST_ADDRESS[2].ACLR
RESET_SIM_N => TEST_ADDRESS[3].ACLR
RESET_SIM_N => TEST_ADDRESS[4].ACLR
RESET_SIM_N => CLOCK~reg0.ACLR
RESET_SIM_N => CLOCK_SIM.ACLR
RESET_SIM_N => clk_sim_cnt[0].ACLR
RESET_SIM_N => clk_sim_cnt[1].ACLR
RESET_SIM_N => clk_sim_cnt[2].ACLR
RESET_SIM_N => clk_sim_cnt[3].ACLR
RESET_SIM_N => clk_sim_cnt[4].ACLR
RESET_SIM_N => clk_sim_cnt[5].ACLR
RESET_SIM_N => clk_sim_cnt[6].ACLR
RESET_SIM_N => clk_sim_cnt[7].ACLR
RESET_SIM_N => clk_sim_cnt[8].ACLR
RESET_SIM_N => clk_sim_cnt[9].ACLR
RESET_SIM_N => clk_sim_cnt[10].ACLR
RESET_SIM_N => clk_sim_cnt[11].ACLR
RESET_SIM_N => state~9.DATAIN
RESET_SIM_N => X1_LAST.ENA
RESET_SIM_N => X0_LAST.ENA
RESET_SIM_N => EXPECTED[1].ENA
RESET_SIM_N => EXPECTED[0].ENA
RESET_SIM_N => CHARS2WRITE[2].ENA
RESET_SIM_N => CHARS2WRITE[1].ENA
RESET_SIM_N => CHARS2WRITE[0].ENA
RUN_SIM_N => RESET_N.OUTPUTSELECT
RUN_SIM_N => X1_LAST.OUTPUTSELECT
RUN_SIM_N => X0_LAST.OUTPUTSELECT
RUN_SIM_N => EXPECTED.OUTPUTSELECT
RUN_SIM_N => EXPECTED.OUTPUTSELECT
RUN_SIM_N => state.OUTPUTSELECT
RUN_SIM_N => state.OUTPUTSELECT
RUN_SIM_N => state.OUTPUTSELECT
RUN_SIM_N => state.OUTPUTSELECT
RUN_SIM_N => state.OUTPUTSELECT
RUN_SIM_N => state.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => DBUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => ABUFFER.OUTPUTSELECT
RUN_SIM_N => RGB_BACK.OUTPUTSELECT
RUN_SIM_N => RGB_BACK.OUTPUTSELECT
RUN_SIM_N => RGB_BACK.OUTPUTSELECT
RUN_SIM_N => TEST_FAILED.OUTPUTSELECT
RUN_SIM_N => PASSED.OUTPUTSELECT
RUN_SIM_N => CHARS2WRITE.OUTPUTSELECT
RUN_SIM_N => CHARS2WRITE.OUTPUTSELECT
RUN_SIM_N => CHARS2WRITE.OUTPUTSELECT
RUN_SIM_N => TEST_ADDRESS.OUTPUTSELECT
RUN_SIM_N => TEST_ADDRESS.OUTPUTSELECT
RUN_SIM_N => TEST_ADDRESS.OUTPUTSELECT
RUN_SIM_N => TEST_ADDRESS.OUTPUTSELECT
RUN_SIM_N => TEST_ADDRESS.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX1.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AX0.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AEXP.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AACT.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZEXP.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
RUN_SIM_N => AZACT.OUTPUTSELECT
PASSED <= PASSED~reg0.DB_MAX_OUTPUT_PORT_TYPE
H_SYNC <= VGA_SYNC:vga.horiz_sync_out
V_SYNC <= VGA_SYNC:vga.vert_sync_out
R_OUT <= VGA_SYNC:vga.red_out
G_OUT <= VGA_SYNC:vga.green_out
B_OUT <= VGA_SYNC:vga.blue_out
VIDEO_BLANK <= VGA_SYNC:vga.video_blank
VIDEO_CLOCK <= VGA_SYNC:vga.video_clock
X1 <= X1_LAST.DB_MAX_OUTPUT_PORT_TYPE
X0 <= X0_LAST.DB_MAX_OUTPUT_PORT_TYPE
CLOCK <= CLOCK~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESET_N <= RESET_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
FAILED <= TEST_FAILED.DB_MAX_OUTPUT_PORT_TYPE


|sm_tester|SIM:inst2|altsyncram:vbuffer
wren_a => altsyncram_spr1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_spr1:auto_generated.data_a[0]
data_a[1] => altsyncram_spr1:auto_generated.data_a[1]
data_a[2] => altsyncram_spr1:auto_generated.data_a[2]
data_a[3] => altsyncram_spr1:auto_generated.data_a[3]
data_a[4] => altsyncram_spr1:auto_generated.data_a[4]
data_a[5] => altsyncram_spr1:auto_generated.data_a[5]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
data_b[3] => ~NO_FANOUT~
data_b[4] => ~NO_FANOUT~
data_b[5] => ~NO_FANOUT~
address_a[0] => altsyncram_spr1:auto_generated.address_a[0]
address_a[1] => altsyncram_spr1:auto_generated.address_a[1]
address_a[2] => altsyncram_spr1:auto_generated.address_a[2]
address_a[3] => altsyncram_spr1:auto_generated.address_a[3]
address_a[4] => altsyncram_spr1:auto_generated.address_a[4]
address_a[5] => altsyncram_spr1:auto_generated.address_a[5]
address_a[6] => altsyncram_spr1:auto_generated.address_a[6]
address_a[7] => altsyncram_spr1:auto_generated.address_a[7]
address_a[8] => altsyncram_spr1:auto_generated.address_a[8]
address_a[9] => altsyncram_spr1:auto_generated.address_a[9]
address_a[10] => altsyncram_spr1:auto_generated.address_a[10]
address_b[0] => altsyncram_spr1:auto_generated.address_b[0]
address_b[1] => altsyncram_spr1:auto_generated.address_b[1]
address_b[2] => altsyncram_spr1:auto_generated.address_b[2]
address_b[3] => altsyncram_spr1:auto_generated.address_b[3]
address_b[4] => altsyncram_spr1:auto_generated.address_b[4]
address_b[5] => altsyncram_spr1:auto_generated.address_b[5]
address_b[6] => altsyncram_spr1:auto_generated.address_b[6]
address_b[7] => altsyncram_spr1:auto_generated.address_b[7]
address_b[8] => altsyncram_spr1:auto_generated.address_b[8]
address_b[9] => altsyncram_spr1:auto_generated.address_b[9]
address_b[10] => altsyncram_spr1:auto_generated.address_b[10]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_spr1:auto_generated.clock0
clock1 => altsyncram_spr1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_a[3] <= <GND>
q_a[4] <= <GND>
q_a[5] <= <GND>
q_b[0] <= altsyncram_spr1:auto_generated.q_b[0]
q_b[1] <= altsyncram_spr1:auto_generated.q_b[1]
q_b[2] <= altsyncram_spr1:auto_generated.q_b[2]
q_b[3] <= altsyncram_spr1:auto_generated.q_b[3]
q_b[4] <= altsyncram_spr1:auto_generated.q_b[4]
q_b[5] <= altsyncram_spr1:auto_generated.q_b[5]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|sm_tester|SIM:inst2|altsyncram:vbuffer|altsyncram_spr1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
q_b[3] <= ram_block1a3.PORTBDATAOUT
q_b[4] <= ram_block1a4.PORTBDATAOUT
q_b[5] <= ram_block1a5.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE


|sm_tester|SIM:inst2|altsyncram:charrom
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
data_b[3] => ~NO_FANOUT~
data_b[4] => ~NO_FANOUT~
data_b[5] => ~NO_FANOUT~
data_b[6] => ~NO_FANOUT~
data_b[7] => ~NO_FANOUT~
address_a[0] => altsyncram_vpo1:auto_generated.address_a[0]
address_a[1] => altsyncram_vpo1:auto_generated.address_a[1]
address_a[2] => altsyncram_vpo1:auto_generated.address_a[2]
address_a[3] => altsyncram_vpo1:auto_generated.address_a[3]
address_a[4] => altsyncram_vpo1:auto_generated.address_a[4]
address_a[5] => altsyncram_vpo1:auto_generated.address_a[5]
address_a[6] => altsyncram_vpo1:auto_generated.address_a[6]
address_a[7] => altsyncram_vpo1:auto_generated.address_a[7]
address_a[8] => altsyncram_vpo1:auto_generated.address_a[8]
address_b[0] => ~NO_FANOUT~
address_b[1] => ~NO_FANOUT~
address_b[2] => ~NO_FANOUT~
address_b[3] => ~NO_FANOUT~
address_b[4] => ~NO_FANOUT~
address_b[5] => ~NO_FANOUT~
address_b[6] => ~NO_FANOUT~
address_b[7] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_vpo1:auto_generated.clock0
clock1 => altsyncram_vpo1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_vpo1:auto_generated.q_a[0]
q_a[1] <= altsyncram_vpo1:auto_generated.q_a[1]
q_a[2] <= altsyncram_vpo1:auto_generated.q_a[2]
q_a[3] <= altsyncram_vpo1:auto_generated.q_a[3]
q_a[4] <= altsyncram_vpo1:auto_generated.q_a[4]
q_a[5] <= altsyncram_vpo1:auto_generated.q_a[5]
q_a[6] <= altsyncram_vpo1:auto_generated.q_a[6]
q_a[7] <= altsyncram_vpo1:auto_generated.q_a[7]
q_b[0] <= <GND>
q_b[1] <= <GND>
q_b[2] <= <GND>
q_b[3] <= <GND>
q_b[4] <= <GND>
q_b[5] <= <GND>
q_b[6] <= <GND>
q_b[7] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|sm_tester|SIM:inst2|altsyncram:charrom|altsyncram_vpo1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|sm_tester|SIM:inst2|altsyncram:vectors
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
data_b[3] => ~NO_FANOUT~
data_b[4] => ~NO_FANOUT~
data_b[5] => ~NO_FANOUT~
data_b[6] => ~NO_FANOUT~
data_b[7] => ~NO_FANOUT~
address_a[0] => altsyncram_voo1:auto_generated.address_a[0]
address_a[1] => altsyncram_voo1:auto_generated.address_a[1]
address_a[2] => altsyncram_voo1:auto_generated.address_a[2]
address_a[3] => altsyncram_voo1:auto_generated.address_a[3]
address_a[4] => altsyncram_voo1:auto_generated.address_a[4]
address_b[0] => ~NO_FANOUT~
address_b[1] => ~NO_FANOUT~
address_b[2] => ~NO_FANOUT~
address_b[3] => ~NO_FANOUT~
address_b[4] => ~NO_FANOUT~
address_b[5] => ~NO_FANOUT~
address_b[6] => ~NO_FANOUT~
address_b[7] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_voo1:auto_generated.clock0
clock1 => altsyncram_voo1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_voo1:auto_generated.q_a[0]
q_a[1] <= altsyncram_voo1:auto_generated.q_a[1]
q_a[2] <= altsyncram_voo1:auto_generated.q_a[2]
q_a[3] <= altsyncram_voo1:auto_generated.q_a[3]
q_a[4] <= altsyncram_voo1:auto_generated.q_a[4]
q_b[0] <= <GND>
q_b[1] <= <GND>
q_b[2] <= <GND>
q_b[3] <= <GND>
q_b[4] <= <GND>
q_b[5] <= <GND>
q_b[6] <= <GND>
q_b[7] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|sm_tester|SIM:inst2|altsyncram:vectors|altsyncram_voo1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT


|sm_tester|SIM:inst2|VGA_SYNC:vga
clock_25Mhz => blue_out~reg0.CLK
clock_25Mhz => green_out~reg0.CLK
clock_25Mhz => red_out~reg0.CLK
clock_25Mhz => vert_sync_out~reg0.CLK
clock_25Mhz => horiz_sync_out~reg0.CLK
clock_25Mhz => pixel_row[0]~reg0.CLK
clock_25Mhz => pixel_row[1]~reg0.CLK
clock_25Mhz => pixel_row[2]~reg0.CLK
clock_25Mhz => pixel_row[3]~reg0.CLK
clock_25Mhz => pixel_row[4]~reg0.CLK
clock_25Mhz => pixel_row[5]~reg0.CLK
clock_25Mhz => pixel_row[6]~reg0.CLK
clock_25Mhz => pixel_row[7]~reg0.CLK
clock_25Mhz => pixel_row[8]~reg0.CLK
clock_25Mhz => pixel_row[9]~reg0.CLK
clock_25Mhz => video_on_v.CLK
clock_25Mhz => pixel_column[0]~reg0.CLK
clock_25Mhz => pixel_column[1]~reg0.CLK
clock_25Mhz => pixel_column[2]~reg0.CLK
clock_25Mhz => pixel_column[3]~reg0.CLK
clock_25Mhz => pixel_column[4]~reg0.CLK
clock_25Mhz => pixel_column[5]~reg0.CLK
clock_25Mhz => pixel_column[6]~reg0.CLK
clock_25Mhz => pixel_column[7]~reg0.CLK
clock_25Mhz => pixel_column[8]~reg0.CLK
clock_25Mhz => pixel_column[9]~reg0.CLK
clock_25Mhz => video_on_h.CLK
clock_25Mhz => vert_sync.CLK
clock_25Mhz => v_count[0].CLK
clock_25Mhz => v_count[1].CLK
clock_25Mhz => v_count[2].CLK
clock_25Mhz => v_count[3].CLK
clock_25Mhz => v_count[4].CLK
clock_25Mhz => v_count[5].CLK
clock_25Mhz => v_count[6].CLK
clock_25Mhz => v_count[7].CLK
clock_25Mhz => v_count[8].CLK
clock_25Mhz => v_count[9].CLK
clock_25Mhz => horiz_sync.CLK
clock_25Mhz => h_count[0].CLK
clock_25Mhz => h_count[1].CLK
clock_25Mhz => h_count[2].CLK
clock_25Mhz => h_count[3].CLK
clock_25Mhz => h_count[4].CLK
clock_25Mhz => h_count[5].CLK
clock_25Mhz => h_count[6].CLK
clock_25Mhz => h_count[7].CLK
clock_25Mhz => h_count[8].CLK
clock_25Mhz => h_count[9].CLK
clock_25Mhz => video_clock.DATAIN
red => red_out.IN1
green => green_out.IN1
blue => blue_out.IN1
red_out <= red_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out <= green_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out <= blue_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
horiz_sync_out <= horiz_sync_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
vert_sync_out <= vert_sync_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
video_blank <= video_on_int.DB_MAX_OUTPUT_PORT_TYPE
video_clock <= clock_25Mhz.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[0] <= pixel_row[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[1] <= pixel_row[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[2] <= pixel_row[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[3] <= pixel_row[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[4] <= pixel_row[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[5] <= pixel_row[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[6] <= pixel_row[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[7] <= pixel_row[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[8] <= pixel_row[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[9] <= pixel_row[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[0] <= pixel_column[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[1] <= pixel_column[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[2] <= pixel_column[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[3] <= pixel_column[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[4] <= pixel_column[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[5] <= pixel_column[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[6] <= pixel_column[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[7] <= pixel_column[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[8] <= pixel_column[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[9] <= pixel_column[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|sm_tester|sm_schematic:inst3
Z <= inst9.DB_MAX_OUTPUT_PORT_TYPE
RESETN => inst9.ACLR
RESETN => inst10.ACLR
CLOCK => inst9.CLK
CLOCK => inst10.CLK
X[0] => inst7.IN0
X[1] => inst2.IN1
X[1] => inst5.IN0
X[1] => inst6.IN0
Q[0] <= inst10.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= inst9.DB_MAX_OUTPUT_PORT_TYPE


|sm_tester|clkgen:inst6
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|sm_tester|clkgen:inst6|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


